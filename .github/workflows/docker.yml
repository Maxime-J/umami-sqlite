name: Docker image
run-name: Create and publish Docker image
on: workflow_dispatch

permissions:
  contents: read
  packages: write

jobs:
  build:
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    runs-on: ${{ matrix.platform == 'linux/arm64' && 'ubuntu-24.04-arm' || 'ubuntu-24.04' }}
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          echo "REGISTRY_IMAGE=ghcr.io/${GITHUB_REPOSITORY@L}" >> $GITHUB_ENV

      - name: Download Umami with patch applied
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release download --repo $GITHUB_REPOSITORY --pattern umami-sqlite.zip
          unzip -q umami-sqlite.zip && rm umami-sqlite.zip
          UMAMI_FOLDER=$(ls -d umami-*)
          mv $UMAMI_FOLDER umami

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        id: build
        env:
          DOCKER_BUILD_SUMMARY: false
          DOCKER_BUILD_RECORD_UPLOAD: false
        uses: docker/build-push-action@v6
        with:
          context: ./umami
          build-args: DATABASE_TYPE=file
          tags: ${{ env.REGISTRY_IMAGE }}
          platforms: ${{ matrix.platform }}
          outputs: type=image,push=true,push-by-digest=true
          provenance: false

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digest-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Prepare
        run: echo "REGISTRY_IMAGE=ghcr.io/${GITHUB_REPOSITORY@L}" >> $GITHUB_ENV

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digest-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker manifest create ${REGISTRY_IMAGE}:latest \
            $(printf -- '--amend ${REGISTRY_IMAGE}@sha256:%s ' *)
          docker manifest push ${REGISTRY_IMAGE}:latest
